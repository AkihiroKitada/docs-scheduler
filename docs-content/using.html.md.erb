---
title: Using Scheduler for PCF
owner: PCF Autoscaler and Scheduler
---

This topic provides instructions for using Scheduler for Pivotal Cloud Foundry (PCF).

<p class="note warning">
<strong>IMPORTANT: </strong> 
The Scheduler for Pivotal Cloud Foundry (PCF) tile is currently in beta and is intended for evaluation and test purposes only. Do not use this product in a PCF production environment.
</p>

This topic provides instructions for using Scheduler for PCF.

You can interact with the service through Cloud Foundry Command Line Interface (cf CLI), [Apps Manager](https://docs.pivotal.io/pivotalcf/2-0/console/manage-apps.html), and the [Scheduler HTTP API](http://docs.pivotal.io/pcf-scheduler/1-0/api). For general information, see [Managing Service Instances with the cf CLI](http://docs.pivotal.io/devguide/services/managing-services.html).

## <a id="prereqs"></a>Prerequisites

To start using Scheduler for PCF, you need the following:

* A PCF installation with [Scheduler for PCF](https://network.pivotal.io/products/p-scheduler-for-pcf) installed and listed in the [Marketplace](http://docs.pivotal.io/devguide/services/#instances)
* A [Space Developer](http://docs.pivotal.io/pivotalcf/concepts/roles.html#roles) account
* (Optional) The cf CLI v6.23.0 or greater and the Scheduler for PCF CLI plugin installed on your local machine. The Scheduler for PCF CLI plugin is packaged with the Scheduler for PCF tile on Pivotal Network.

## <a id='create-service-cli'></a>Create and Bind a Service Instance Using cf CLI

Every app and service in PCF is scoped to a [space](http://docs.pivotal.io/pivotalcf/concepts/roles.html#spaces). This means that an app can use a service only if an instance of the service exists in the same space.

The Scheduler for PCF service is a singleton service. Only one service instance can be created in a space.

### <a id='run-marketplace'></a>Confirm Service Availability

For apps to use a service, the service must be available in the Marketplace. To confirm the availability of Scheduler for PCF, perform the following steps:

1. Run `cf marketplace` from the command line.
1. If the output lists `scheduler-for-pcf` in the `service` column, Scheduler for PCF is available. If the service is not available, install it. See [Installing and Configuring Scheduler for PCF](./installing.html) for more information.

    <pre class="terminal">
    $ cf marketplace
    Getting services from marketplace in org my-org / space my-space as user<span>@</span>example.com...
    OK
    service             plans      description
    [...]
    scheduler-for-pcf   standard   Scheduler service
    [...]
    </pre>

### <a id='create'></a>Create a Service Instance

To create an instance of the Scheduler for PCF service, run `cf create-service scheduler-for-pcf standard SERVICE-INSTANCE-NAME`, replacing `SERVICE-INSTANCE-NAME` with a name of your choice. After you create the service instance, this instance name appears under `name` in the output of the `cf services` command.

See the following example:

<pre class="terminal">
$ cf create-service scheduler-for-pcf standard my-instance<br>
Creating service my-instance in org my-org / space my-space as user<span>@</span>example.com...
OK<br>
$ cf services<br>
Getting services in org my-org / space my-space as user<span>@</span>example.com...
OK
name          service            plan    bound apps    last operation
my-instance   scheduler-for-pcf  standard              create succeeded
</pre>

You can create only one instance in a space. If you attempt to create more than one instance in a space, you receive an error response.

### <a id="bind"></a>Bind a Service Instance to Your App

For an app to use a service, you must bind it to a service instance. Do this after you push or re-push the app using `cf push`.

To bind an app to a Scheduler for PCF instance, run `cf bind-service APP-NAME SERVICE-INSTANCE-NAME`, replacing `APP-NAME` with the name of the app you want to use the Scheduler for PCF service for and `SERVICE-INSTANCE-NAME` with the name you provided when you ran `cf create-service`.

<pre class="terminal">
$ cf bind-service my-app my-instance<br>
Binding service my-instance to my-app in org my-org / space my-space as user<span>@</span>example.com...
OK
TIP: Use 'cf push' to ensure your env variable changes take effect
</pre>

## <a id="manage-jobs-cli"></a>Manage Jobs Using cf CLI

See [Using Jobs](using-jobs.html) to learn about the operations that you can perform with Scheduler for PCF.

### <a id="view-schedules"></a>View Schedules for Jobs

You can review schedules for all jobs in a space by running `cf job-schedules`. See the following example:

<pre class="terminal">
$ cf job-schedules my-job "0 12 ? * *"<br>
Getting scheduled jobs for org my-org / space my-space as user<span>@</span>example.com...
App Name: my-app
my-job        pwd    2b69e0c2-9664-46bb-4817-54afcedbb65d   0 12 ? * *
OK
</pre>

### <a id="delete-schedule"></a>Delete a Job Schedule  

You can delete a specific schedule by running `cf delete-job-schedule SCHEDULE_GUID`, where `SCHEDULE_GUID` is the GUID found in the output of the `job-schedules` command. See the following example:

<pre class="terminal">
$ cf delete-job-schedule 2b69e0c2-9664-46bb-4817-54afcedbb65d<br>
Really delete the schedule 2b69e0c2-9664-46bb-4817-54afcedbb65d / 0 12 ? * * and all associated history?> [yN]: y
OK
</pre>	

### <a id="delete-job"></a>Delete a Job

You can delete a job by running `cf delete-job JOB_NAME`. See the following example:

<pre class="terminal">
$ cf delete-job my-job<br>
Really delete the job my-job with command pwd and all associated schedules and history?> [yN]:y
OK
</pre>

## <a id=“using-am”></a> Using PCF Scheduler in Apps Manager

For information about binding and using PCF Scheduler to your service through Apps Manager, see [Managing Apps and Service Instances Using Apps Manager](http://docs.pivotal.io/pivotalcf/2-0/console/manage-apps.html).
